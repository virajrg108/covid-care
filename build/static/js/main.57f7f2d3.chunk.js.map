{"version":3,"sources":["img/icon.png","history.js","pages/landing/landing.jsx","components/topbar.jsx","pages/login/login.jsx","App.js","serviceWorker.js","index.js","img/icon1.png"],"names":["module","exports","history","createBrowserHistory","Landing","props","handleRedirect","page","push","className","src","Icon","type","size","onClick","React","Component","Header","Layout","Topbar","toggleDrawer","booli","setState","drawerVisible","state","menuSelectedKey","console","log","placement","closable","onClose","visible","this","key","mode","selectedKeys","toString","defaultOpenKeys","style","height","borderRight","Item","display","tabs","profile","dashboard","chatbot","MenuOutlined","justify","span","sm","xs","md","showMenu","theme","Content","Login","Footer","handleChange","e","name","target","value","handleLogin","body","username","pass","fetch","method","credentials","JSON","stringify","headers","then","response","json","data","catch","err","title","padding","width","placeholder","onChange","App","createStore","generateReducers","user","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.57f7f2d3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/icon.24ffc634.png\";","import { createBrowserHistory } from 'history'\r\n\r\nconst history = createBrowserHistory()\r\nexport default history;","import React from 'react';\r\nimport { Button, Divider } from 'antd';\r\nimport { generateReducers, set, get, reset, push, del } from \"automate-redux\";\r\n\r\nimport history from '../../history';\r\nimport './landing.scss';\r\nimport Icon from '../../img/icon1.png';\r\nimport { store } from '../../App';\r\n\r\nclass Landing extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  handleRedirect = (page) => {\r\n    history.push('/'+page);\r\n  }\r\n  render() {\r\n    // console.log(get(store.getState(), \"user\"))\r\n    return (\r\n      <div className=\"landing\">\r\n        <div className=\"landing-content\">\r\n          <img className=\"icon\" src={Icon} />\r\n          <div className=\"title\">Covid Care</div>\r\n          <div className=\"btn-wrapper\">\r\n            <Button type=\"primary\" size=\"large\" className=\"login-btn\" onClick={()=>this.handleRedirect('login')}>Login</Button>\r\n            <Divider type=\"vertical\" />\r\n            <Button type=\"primary\" size=\"large\" className=\"login-btn\" onClick={()=>this.handleRedirect('signup')}>Sign Up</Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Landing;","import React from 'react';\r\nimport { Button, Divider, Layout, Menu, Row, Col, Drawer } from 'antd';\r\nimport { generateReducers, set, get, reset, push, del } from \"automate-redux\";\r\nimport { MenuOutlined } from '@ant-design/icons';\r\n\r\nimport history from '../history';\r\nimport Icon from '../img/icon1.png';\r\nimport './topbar.scss';\r\n\r\nconst { Header } = Layout;\r\n\r\nclass Topbar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { drawerVisible: false, menuSelectedKey:1 }\r\n    console.log(props);\r\n  }\r\n  toggleDrawer = (booli) => {\r\n    this.setState({ drawerVisible: booli });\r\n  }\r\n  handleRedirect = (page) => {\r\n    history.push('/' + page);\r\n  }\r\n  render() {\r\n    return (\r\n      <Header className=\"topbar\">\r\n        <Drawer\r\n          placement=\"left\"\r\n          closable={false}\r\n          onClose={() => { this.toggleDrawer(false) }}\r\n          visible={this.state.drawerVisible}\r\n          key=\"left\"\r\n          className=\"drawer\"\r\n        >\r\n          <div className=\"logo-wrapper-sm\">\r\n            <img className=\"logo\" src={Icon} />\r\n          </div>\r\n          <Menu\r\n            mode=\"inline\"\r\n            selectedKeys={this.state.menuSelectedKey.toString()}\r\n            defaultOpenKeys={['sub1']}\r\n            style={{ height: '100%', borderRight: 0 }}\r\n          >\r\n            <Menu.Item key=\"1\" style={{display: this.props.tabs.profile}}>Profile</Menu.Item>\r\n            <Menu.Item key=\"2\" style={{display: this.props.tabs.dashboard}}>Dashboard</Menu.Item>\r\n            <Menu.Item key=\"3\" style={{display: this.props.tabs.chatbot}}>Chatbot</Menu.Item>\r\n            <Menu.Item key=\"4\" >Logout</Menu.Item>\r\n          </Menu>\r\n        </Drawer>\r\n        <div className=\"menu-btn-sm-wrapper\" onClick={() => { this.toggleDrawer(true) }}>\r\n          <MenuOutlined className=\"menu-btn-sm\" />\r\n        </div>\r\n        <Row justify=\"space-between\">\r\n          <Col span={8} className=\"logo-wrapper-lg\">\r\n            <img className=\"logo\" src={Icon} />\r\n          </Col>\r\n          <Col sm={24} xs={24} md={8} className=\"title-wrapper\">\r\n            <div className=\"title\">Covid Care</div>\r\n          </Col>\r\n          <Col span={8} className=\"menu-wrapper-lg\">\r\n            {this.props.showMenu ? <div>\r\n              <Menu className=\"desktop-menu\" theme=\"dark\" mode=\"horizontal\" selectedKeys={this.state.menuSelectedKey.toString()}>\r\n                <Menu.Item key=\"1\" style={{display: this.props.tabs.profile}}>Profile</Menu.Item>\r\n                <Menu.Item key=\"2\" style={{display: this.props.tabs.dashboard}}>Dashboard</Menu.Item>\r\n                <Menu.Item key=\"3\" style={{display: this.props.tabs.chatbot}}>ChatBot</Menu.Item>\r\n                <Menu.Item key=\"4\">Logout</Menu.Item>\r\n              </Menu>\r\n            </div> :\r\n              <div>\r\n                <Menu theme=\"dark\" mode=\"horizontal\" selectedKeys={this.state.menuSelectedKey.toString()}>\r\n                  <Menu.Item key=\"1\">Logout</Menu.Item>\r\n                </Menu>\r\n              </div>\r\n            }\r\n          </Col>\r\n        </Row>\r\n      </Header>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Topbar;","import React from 'react';\r\nimport { Button, Divider, Layout, Menu, Col, Row, Input } from 'antd';\r\nimport { generateReducers, set, get, reset, push, del } from \"automate-redux\";\r\nimport axios from 'axios';\r\nimport fetch from 'node-fetch';\r\n\r\nimport history from '../../history';\r\nimport Topbar from '../../components/topbar';\r\nimport './login.scss';\r\nimport Icon from '../../img/icon.png';\r\nimport { store } from '../../App';\r\n\r\n// mock server - https://844171e3-d749-453e-9e27-605c39f74c8d.mock.pstmn.io\r\nconst { Header, Content, Footer } = Layout;\r\n\r\nclass Login extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { username: '', pass: '' }\r\n  }\r\n  handleChange = e => {\r\n    let name = e.target.name;\r\n    this.setState({ [name]: e.target.value });\r\n  }\r\n  handleRedirect = (page) => {\r\n    history.push('/' + page);\r\n  }\r\n  handleLogin = () => {\r\n    let body = {\r\n      username: this.state.username,\r\n      pass: this.state.pass\r\n    }\r\n    fetch('http://localhost:5000/login', {\r\n      method: 'POST',\r\n      mode: 'cors',\r\n      credentials: 'same-origin',\r\n      body: JSON.stringify(body),\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json'\r\n      },\r\n    })\r\n      .then(response => {\r\n        console.log(response);\r\n        return response.json();\r\n      }).then(data => {\r\n        // Work with JSON data here\r\n        console.log(data);\r\n      }).catch(err => {\r\n        // Do something for an error here\r\n        console.log(\"Error Reading data \" + err);\r\n      });\r\n    // axios({\r\n    //   method: 'post',\r\n    //   url: 'http://127.0.0.1:5000/login',\r\n    //   // url: 'https://carecov.free.beeceptor.com/login',\r\n    //   data: {\r\n    //     username: this.state.username,\r\n    //     pass: this.state.pass\r\n    //   }\r\n    // }).then((response) => {\r\n    //   if (response.status == 200) {\r\n    //     console.log('Login Successful!!');\r\n    //     console.log(response.data);\r\n    //     return;\r\n    //   }\r\n    //   else\r\n    //     console.log('Login unsuccessful');\r\n\r\n    // }, (error) => {\r\n    //   console.log('Login unsuccessful');\r\n    //   console.log(error);\r\n    // });\r\n  }\r\n  render() {\r\n    return (\r\n      <Layout className=\"login\">\r\n        <Topbar showMenu={true} title={'Covid Care'} tabs={{ profile: 'none', dashboard: 'none', chatbot: 'none' }} />\r\n        <Content style={{ padding: '0 50px' }} className=\"login-content\">\r\n          <Row justify=\"center\" style={{ width: '100%' }}>\r\n            <Col xs={24} sm={20} md={6} className=\"login-form-wrapper\">\r\n              <div className=\"login-title\">LOGIN</div>\r\n              <div className=\"login-form\">\r\n                <Input className=\"login-inp\" size=\"large\" placeholder=\"Username\" name=\"username\" value={this.state.username} onChange={this.handleChange} />\r\n                <Input className=\"login-inp\" size=\"large\" placeholder=\"Password\" name=\"pass\" value={this.state.pass} onChange={this.handleChange} type=\"password\" />\r\n                <Button className=\"login-btn\" type=\"primary\" size=\"large\" onClick={this.handleLogin}>Submit</Button>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </Content>\r\n      </Layout>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Login;","import React from 'react';\nimport { Router, Route } from \"react-router-dom\";\nimport { createStore } from \"redux\";\nimport { generateReducers, set, get, reset, push, del } from \"automate-redux\";\n\nimport './App.less';\nimport history from \"./history\";\nimport Landing from './pages/landing/landing.jsx';\nimport Login from './pages/login/login';\n\nconst initialState = { user: {username: 'user', pass: ''} };\nexport const store = createStore(generateReducers(initialState));\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Router history={history}>\n          <div>\n            <Route exact path=\"/\" component={Landing} />\n            <Route exact path=\"/login\" component={Login} />\n          </div>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/icon1.ddab4082.png\";"],"sourceRoot":""}